{"remainingRequest":"/home/nextoo/Bureau/formation_vue/nextoo/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/nextoo/Bureau/formation_vue/nextoo/src/components/Card.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/nextoo/Bureau/formation_vue/nextoo/src/components/Card.vue","mtime":1594393301309},{"path":"/home/nextoo/Bureau/formation_vue/nextoo/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nextoo/Bureau/formation_vue/nextoo/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/nextoo/Bureau/formation_vue/nextoo/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/nextoo/Bureau/formation_vue/nextoo/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/nextoo/Bureau/formation_vue/nextoo/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmRhbmdlciB7CiAgYmFja2dyb3VuZC1jb2xvcjogcmVkICFpbXBvcnRhbnQ7Cn0K"},{"version":3,"sources":["Card.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqHA;AACA;AACA","file":"Card.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"card card-result\">\n    <div class=\"card-header\">\n      <p class=\"card-header-title\">\n        {{ titleWithFavorite }} is a count {{ counter }}\n      </p>\n      <a class=\"card-header-icon\">\n        <span class=\"icon is-favorite\">\n          <i\n            @click=\"changeIsFavorite()\"\n            class=\"fa fa-star\"\n            :class=\"{ 'fa-star-o': !isFavorite }\"\n          ></i>\n        </span>\n      </a>\n    </div>\n    <div class=\"card-content\">\n      <div class=\"media\">\n        <div class=\"media-left\">\n          <figure class=\"image is-128x200\">\n            <img :src=\"urlImage\" alt=\"\" />\n          </figure>\n        </div>\n        <div class=\"media-content\">\n          <p>Created in {{ dateCreation }} - {{ numberOfSeasons }} seasons</p>\n          <p class=\"tags\">\n            <span class=\"tag\" v-for=\"genre in genres\" :key=\"genre\">{{\n              genre\n            }}</span>\n          </p>\n          <p class=\"tags\">\n            <span class=\"tag\" :class=\"statusTagClass()\">{{ status }}</span>\n          </p>\n          <div class=\"content\" @click=\"fullDescription()\">\n            {{ description | filter(35, full) }}\n          </div>\n        </div>\n      </div>\n      <router-link :to=\"{ name: 'Detail', params: { id } }\">\n        <button>show detail</button>\n      </router-link>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Component, Prop, Vue } from \"vue-property-decorator\";\nimport filter from \"@/filters/filter-description\";\n\n@Component({\n  filters: {\n    filter\n  }\n})\nexport default class CardComponent extends Vue {\n  @Prop({ required: true })\n  id!: string;\n\n  @Prop({ required: true })\n  title!: string;\n\n  @Prop({ required: true })\n  description!: string;\n\n  @Prop({ required: true })\n  dateCreation!: string;\n\n  @Prop({ required: true })\n  numberOfSeasons!: string;\n\n  @Prop({ required: true })\n  status!: string;\n\n  @Prop({ required: true })\n  urlImage!: string;\n\n  @Prop({ required: true })\n  genres!: ReadonlyArray<string>;\n\n  @Prop({ required: true })\n  isFavorite!: boolean;\n\n  full = true;\n\n  fullDescription(): void {\n    this.full = !this.full;\n  }\n\n  get titleWithFavorite() {\n    const isOrNotFavorited = this.isFavorite ? \"\" : \"not\";\n    return `${this.title} is ${isOrNotFavorited} favorited`;\n  }\n\n  changeIsFavorite(): void {\n    //this.isFavorite = !this.isFavorite;\n    this.$emit(\"toggle-favorite\");\n  }\n\n  statusTagClass(): \"is-primary\" | \"is-danger\" {\n    if (this.status === \"Continuing\") {\n      return \"is-primary\";\n    } else {\n      return \"is-danger\";\n    }\n  }\n\n  get counter(): number {\n    return this.$store.state.counter;\n  }\n\n  increment() {\n    this.$store.dispatch(\"incrementAfterOneSecond\");\n  }\n}\n</script>\n\n<style>\n.danger {\n  background-color: red !important;\n}\n</style>\n"]}]}